version: "3.5"
services:
  nginx:
    image: nginx:bookworm
    volumes:
      - ../nginx/config:/etc/nginx/conf.d/default.conf

    restart: unless-stopped
    ports:
      # - 11560:11560 # Authority
      - 8000:8000 # Engine
      - 8082:8082 # Portal
      - 5111:5111 # App
      - 3000:3000 # Frontend
      - 80:80
  authority:
    image: ghcr.io/ainges/processcube_authority:2024-1
    depends_on:
      - db_authority
    restart: unless-stopped
    environment:
      ONFIG_PATH: /etc/authority/config/config.json
      # UPE_SEED_PATH: /etc/authority/config/upeSeedingData.json
      LOG_LEVEL: debug
    volumes:
      - ./.processcube/authority/config.json:/etc/authority/config/config.json
      # - ./.processcube/authority/options.json:/app/extensions/username_password/options.json
      - ./.processcube/authority/upeSeedingData.json:/etc/authority/config/upeSeedingData.json
    ports:
      - 11560:11560

  engine:
    image: ghcr.io/ainges/processcube_engine:2024-1
    # ports:
    #   - 8000:8000
    volumes:
      - ./.processcube/engine/config/config.json:/etc/engine/config/config.json:ro
      - ./.processcube/engine/db:/root/.config/AtlasEngineFullstackServer/databases:rw
      - ./processes:/processes:ro
    command: --seed-dir=/processes --port 8000
    environment:
      CONFIG_PATH: /etc/engine/config/config.json

  portal:
    image: ghcr.io/ainges/portal:4
    volumes:
      - ./.processcube/portal/theme.css:/etc/portal/config/theme.css:ro
      - ./.processcube/portal/config.json:/etc/portal/config/config.json:ro
      - ./.processcube/portal/assets:/etc/portal/config/assets:ro
      - ./.processcube/portal/translation:/etc/portal/config/translation:ro
    command: "--config-path /etc/portal/config/config.json --theme /etc/portal/config/theme.css --assets /etc/portal/config/assets"
    # ports:
    #   - 8082:8082

  app:
    image: processsuite
    build:
      context: ./
      dockerfile: apps/processSuite/Dockerfile
    volumes:
      - ./apps/processSuite/frontend/src/config/config.json:/apps/processSuite/wwwroot/config.json
      - ./apps/processSuite/Properties/:/apps/processSuite/Properties/
      - ./apps/processSuite/appsettings.json:/apps/processSuite/appsettings.json
      - ./apps/processSuite/appsettings.Development.json:/apps/processSuite/appsettings.Development.json
      - ./apps/processSuite/Program.cs:/apps/processSuite/Program.cs
      - ./apps/processSuite/Worker/:/apps/processSuite/Worker/
    # ports:
    #   - 5111:5111
    working_dir: /apps/processSuite
    command: dotnet run

  frontend:
    image: processsuite
    volumes:
      - ./apps/processSuite/frontend/public/:/apps/processSuite/frontend/public/
      - ./apps/processSuite/frontend/src/:/apps/processSuite/frontend/src/
      - ./apps/processSuite/frontend/.env:/apps/processSuite/frontend/.env
      - ./apps/processSuite/frontend/.env.development:/apps/processSuite/frontend/.env.development
      - ./apps/processSuite/frontend/aspnetcore-https.js:/apps/processSuite/frontend/aspnetcore-https.js
      - ./apps/processSuite/frontend/aspnetcore-react.js:/apps/processSuite/frontend/aspnetcore-react.js
      - ./apps/processSuite/frontend/tsconfig.json:/apps/processSuite/frontend/tsconfig.json
    working_dir: /apps/processSuite/frontend/
    command: npm start
    # ports:
    #   - 3000:3000

  artemis:
    image: apache/activemq-artemis:latest
    ports:
      - "8161:8161" # Web Console
      - "61616:61616" # AMQP
      - "5672:5672" # MQTT
    # volumes:
    #   - "../artemis/broker.xml:/var/lib/artemis-instance/etc/broker.xml"

  smtp4dev:
    image: rnwood/smtp4dev
    ports:
      - "3300:80"
      - "2525:25"

  minio:
    image: quay.io/minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ../integration/dev/minio/data/:/data
    environment:
      MINIO_ROOT_USER: admin123456
      MINIO_ROOT_PASSWORD: admin123456
    command: server /data --console-address ":9001"

  postgres:
    container_name: scil_db
    image: postgres:bookworm
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: SCIL_DB
    ports:
      - "5432:5432"
    # volumes:
    #   - ../integration/src/main/resources/sql/init/init_schema.sql:/docker-entrypoint-initdb.d/init_schema.sql

  db_authority:
    image: postgres:bookworm
    container_name: authority_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: authority
    ports:
      - "5433:5432"
